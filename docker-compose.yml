services:
  adventskalender_database:
    container_name: adventskalender_database
    image: postgres:17
    volumes:
      - ./.volumes/postgres_data:/var/lib/postgresql/data:rw
    environment:
      - POSTGRES_USER=adventskalender
      - POSTGRES_PASSWORD=debugpassword
      - POSTGRES_DB=adventskalender
    restart: "unless-stopped"
    networks:
      - adventskalender
    ports:
      - "5432:5432" # just needs to be exported for debugging purposes
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U adventskalender" ]
      interval: 10s
      timeout: 5s
      retries: 5
  adventskalender_backend:
    container_name: adventskalender_backend
    image: adventskalender-backend:local
    environment:
      - ADVENTSKALENDER_LOGGING_LEVEL=trace
      - ADVENTSKALENDER_TOKEN_SIGNATURE_PSK=tokenpsk
      - ADVENTSKALENDER_DB_CONNECTION=postgres://adventskalender:debugpassword@adventskalender_database/adventskalender
    restart: "unless-stopped"
    depends_on:
      - adventskalender_database
    networks:
      - adventskalender
    ports:
      - "5479:5479" # just needs to be exported for debugging purposes
    healthcheck:
      test: [ "CMD-SHELL", "curl --user-agent docker-health-check/1.0 --fail http://127.0.0.1:5479/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
  adventskalender_frontend:
    container_name: adventskalender_frontend
    image: adventskalender-frontend:local
    restart: "unless-stopped"
    depends_on:
      - adventskalender_backend
    networks:
      - adventskalender
    ports:
      - "5615:80"
    healthcheck:
      test: [ "CMD-SHELL", "curl --user-agent docker-health-check/1.0 --fail http://127.0.0.1" ]
      interval: 10s
      timeout: 5s
      retries: 5
networks:
  adventskalender:
    driver: bridge
